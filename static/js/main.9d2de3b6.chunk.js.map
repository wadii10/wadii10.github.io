{"version":3,"sources":["data/initialData.ts","styles/styles.ts","styles/compose.ts","components/EditableInput.tsx","components/EditableSelect.tsx","components/EditableTextarea.tsx","components/EditableCalendarInput.tsx","hooks/useOnClickOutside.ts","components/EditableFileImage.tsx","data/countryList.ts","components/Document.tsx","components/Page.tsx","components/View.tsx","components/Text.tsx","components/DownloadPDF.tsx","components/InvoicePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialProductLine","ref","description","quantity","prix","remise","tva","initialInvoice","logo","logoWidth","title","companyName","name","companyAddress","companyAddress2","companyCountry","billTo","clientName","clientAddress","clientAddress2","clientCountry","invoiceTitleLabel","invoiceTitle","invoiceDateLabel","invoiceDate","invoiceDueDateLabel","invoiceDueDate","productLineDescription","productLineQuantity","productLineQuantityRate","productLineQuantityAmount","productLineRef","productLineRemise","productLineTva","productLines","subTotalLabel","totalLabel","currency","notesLabel","notes","termLabel","term","styles","dark","color","white","backgroundColor","flex","display","flexDirection","flexWrap","paddingRight","width","row","borderBottom","marginTop","marginBottom","padding","paddingBottom","right","textAlign","bold","fontWeight","fontSize","page","fontFamily","span","compose","classes","css","replace","split","forEach","className","undefined","Object","assign","EditableInput","placeholder","value","onChange","pdfMode","style","type","e","target","EditableSelect","options","useState","isEditing","setIsEditing","onBlur","autoFocus","map","option","key","text","readOnly","onFocus","EditableTextarea","rows","minRows","EditableCalendarInput","selected","date","dateFormat","useOnClickOutside","handler","useEffect","listener","event","el","current","contains","document","addEventListener","removeEventListener","EditableFileImage","onChangeImage","onChangeWidth","fileInput","useRef","widthWrapper","handleUpload","click","maxWidth","src","alt","onClick","min","max","marks","100","150","200","250","included","step","defaultValue","tabIndex","accept","files","length","reader","FileReader","result","readAsDataURL","countryList","Document","children","Page","size","View","Text","Download","data","show","setShow","timeout","setTimeout","clearTimeout","fileName","toLowerCase","aria-label","Font","register","family","fonts","InvoicePage","invoice","setInvoice","subTotal","setSubTotal","saleTax","Date","valueOf","setDate","getDate","handleChange","newInvoice","handleProductLineChange","index","productLine","i","calculateAmount","rate","quantityNumber","parseFloat","rateNumber","remiseNumber","tvaNumber","amount","toFixed","format","Array","isArray","filter","handleRemove","toString","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d2de3b6.chunk.js","sourcesContent":["import { ProductLine, Invoice } from './types'\r\n\r\nexport const initialProductLine: ProductLine = {\r\n  ref:'',\r\n  description: '',\r\n  quantity: '1',\r\n  prix: '0.00',\r\n  remise:'0',\r\n  tva:'0'\r\n}\r\n\r\nexport const initialInvoice: Invoice = {\r\n  logo: '',\r\n  logoWidth: 100,\r\n  title: 'Facture',\r\n  companyName: 'Ellouze',\r\n  name: '',\r\n  companyAddress: 'Tunisie',\r\n  companyAddress2: '',\r\n  companyCountry: 'Tunisie',\r\n  billTo: 'Client:',\r\n  clientName: '',\r\n  clientAddress: '',\r\n  clientAddress2: '',\r\n  clientCountry: 'Tunisie',\r\n  invoiceTitleLabel: 'Facture N°',\r\n  invoiceTitle: '',\r\n  invoiceDateLabel: 'Date',\r\n  invoiceDate: '',\r\n  invoiceDueDateLabel: 'Due Date',\r\n  invoiceDueDate: '',\r\n  productLineDescription: 'Description',\r\n  productLineQuantity: 'Qty',\r\n  productLineQuantityRate: 'Prix',\r\n  productLineQuantityAmount: 'Total TTC',\r\n  productLineRef:'Ref',\r\n  productLineRemise:'Remise',\r\n  productLineTva:'TVA',\r\n  productLines: [\r\n   \r\n  ],\r\n  subTotalLabel: 'Sub Total',\r\n  totalLabel: 'TOTAL',\r\n  currency: 'TND',\r\n  notesLabel: 'Notes',\r\n  notes: 'It was great doing business with you.',\r\n  termLabel: 'Terms & Conditions',\r\n  term: 'Please make the payment by the due date.',\r\n}\r\n","import { CSSClasses } from '../data/types'\r\n\r\nconst colorDark = '#222'\r\nconst colorDark2 = '#666'\r\nconst colorGray = '#e3e3e3'\r\nconst colorWhite = '#fff'\r\n\r\nconst styles: CSSClasses = {\r\n  dark: {\r\n    color: colorDark,\r\n  },\r\n\r\n  white: {\r\n    color: colorWhite,\r\n  },\r\n\r\n  'bg-dark': {\r\n    backgroundColor: colorDark2,\r\n  },\r\n\r\n  'bg-gray': {\r\n    backgroundColor: colorGray,\r\n  },\r\n\r\n  flex: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n\r\n  'w-auto': {\r\n    flex: 1,\r\n    paddingRight: '8px',\r\n  },\r\n\r\n  'ml-30': {\r\n    flex: 1,\r\n  },\r\n\r\n  'w-100': {\r\n    width: '100%',\r\n  },\r\n\r\n  'w-50': {\r\n    width: '50%',\r\n  },\r\n\r\n  'w-55': {\r\n    width: '55%',\r\n  },\r\n\r\n  'w-45': {\r\n    width: '45%',\r\n  },\r\n\r\n  'w-60': {\r\n    width: '60%',\r\n  },\r\n\r\n  'w-40': {\r\n    width: '40%',\r\n  },\r\n\r\n  'w-48': {\r\n    width: '48%',\r\n  },\r\n\r\n  'w-17': {\r\n    width: '17%',\r\n  },\r\n\r\n  'w-18': {\r\n    width: '18%',\r\n  },\r\n\r\n  row: {\r\n    borderBottom: `1px solid ${colorGray}`,\r\n  },\r\n\r\n  'mt-40': {\r\n    marginTop: '40px',\r\n  },\r\n\r\n  'mt-30': {\r\n    marginTop: '30px',\r\n  },\r\n\r\n  'mt-20': {\r\n    marginTop: '20px',\r\n  },\r\n\r\n  'mt-10': {\r\n    marginTop: '10px',\r\n  },\r\n\r\n  'mb-5': {\r\n    marginBottom: '5px',\r\n  },\r\n\r\n  'p-4-8': {\r\n    padding: '4px 8px',\r\n  },\r\n\r\n  'p-5': {\r\n    padding: '5px',\r\n  },\r\n\r\n  'pb-10': {\r\n    paddingBottom: '10px',\r\n  },\r\n\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n\r\n  bold: {\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  'fs-20': {\r\n    fontSize: '20px',\r\n  },\r\n\r\n  'fs-45': {\r\n    fontSize: '45px',\r\n  },\r\n\r\n  page: {\r\n    fontFamily: 'Nunito',\r\n    fontSize: '13px',\r\n    color: '#555',\r\n    padding: '40px 35px',\r\n  },\r\n\r\n  span: {\r\n    padding: '4px 12px 4px 0',\r\n  },\r\n\r\n  logo: {\r\n    display: 'block',\r\n  }\r\n}\r\n\r\nexport default styles\r\n","import ReactPDF from '@react-pdf/renderer'\r\nimport styles from './styles'\r\n\r\nconst compose = (classes: string): ReactPDF.Styles => {\r\n  const css: ReactPDF.Styles = {}\r\n\r\n  const classesArray: string[] = classes.replace(/\\s+/g, ' ').split(' ')\r\n\r\n  classesArray.forEach((className) => {\r\n    if (typeof styles[className] !== undefined) {\r\n      Object.assign(css, styles[className])\r\n    }\r\n  })\r\n\r\n  return css\r\n}\r\n\r\nexport default compose\r\n","import React, { FC } from 'react'\r\nimport { Text } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  placeholder?: string\r\n  value?: any\r\n  onChange?: (value: any) => void\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst EditableInput: FC<Props> = ({ className, placeholder, value, onChange, pdfMode }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\r\n      ) : (\r\n        <input\r\n          type=\"text\"\r\n          className={'input ' + (className ? className : '')}\r\n          placeholder={placeholder || ''}\r\n          value={value || ''}\r\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditableInput\r\n","import React, { FC, useState } from 'react'\r\nimport { Text } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\nexport interface SelectOption {\r\n  value: string\r\n  text: string\r\n}\r\n\r\ninterface Props {\r\n  className?: string\r\n  options?: SelectOption[]\r\n  placeholder?: string\r\n  value?: string\r\n  onChange?: (value: string) => void\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst EditableSelect: FC<Props> = ({\r\n  className,\r\n  options,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  pdfMode,\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState<boolean>(false)\r\n\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\r\n      ) : (\r\n        <>\r\n          {isEditing ? (\r\n            <select\r\n              className={'select ' + (className ? className : '')}\r\n              value={value}\r\n              onChange={onChange ? (e) => onChange(e.target.value) : undefined}\r\n              onBlur={() => setIsEditing(false)}\r\n              autoFocus={true}\r\n            >\r\n              {options?.map((option) => (\r\n                <option key={option.text} value={option.value}>\r\n                  {option.text}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          ) : (\r\n            <input\r\n              readOnly={true}\r\n              type=\"text\"\r\n              className={'input ' + (className ? className : '')}\r\n              value={value || ''}\r\n              placeholder={placeholder || ''}\r\n              onFocus={() => setIsEditing(true)}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditableSelect\r\n","import React, { FC } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport { Text } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  placeholder?: string\r\n  value?: string\r\n  onChange?: (value: string) => void\r\n  pdfMode?: boolean\r\n  rows?: number\r\n}\r\n\r\nconst EditableTextarea: FC<Props> = ({\r\n  className,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  pdfMode,\r\n  rows,\r\n}) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\r\n      ) : (\r\n        <TextareaAutosize\r\n          minRows={rows || 1}\r\n          className={'input ' + (className ? className : '')}\r\n          placeholder={placeholder || ''}\r\n          value={value || ''}\r\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditableTextarea\r\n","import React, { FC } from 'react'\r\nimport { Text } from '@react-pdf/renderer'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  value?: string\r\n  selected?: Date\r\n  onChange?: (date: Date | [Date, Date] | null) => void\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst EditableCalendarInput: FC<Props> = ({ className, value, selected, onChange, pdfMode }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\r\n      ) : (\r\n        <DatePicker\r\n          className={'input ' + (className ? className : '')}\r\n          selected={selected}\r\n          onChange={onChange ? (date) => onChange(date) : (date) => null}\r\n          dateFormat=\"MMM dd, yyyy\"\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditableCalendarInput\r\n","import { RefObject, useEffect } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return\r\n      }\r\n\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside\r\n","import React, { FC, useRef, useState } from 'react'\r\nimport Slider from 'rc-slider'\r\nimport { Image } from '@react-pdf/renderer'\r\nimport useOnClickOutside from '../hooks/useOnClickOutside'\r\nimport compose from '../styles/compose'\r\nimport 'rc-slider/assets/index.css'\r\n\r\ninterface Props {\r\n  className?: string\r\n  placeholder?: string\r\n  value?: string\r\n  width?: number\r\n  onChangeImage?: (value: string) => void\r\n  onChangeWidth?: (value: number) => void\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst EditableFileImage: FC<Props> = ({ className, placeholder, value, width, onChangeImage, onChangeWidth, pdfMode }) => {\r\n  const fileInput = useRef<HTMLInputElement>(null)\r\n  const widthWrapper = useRef<HTMLDivElement>(null)\r\n  const [isEditing, setIsEditing] = useState<boolean>(false)\r\n  const marks = {\r\n    100: '100px',\r\n    150: '150px',\r\n    200: '200px',\r\n    250: '250px'\r\n  }\r\n\r\n  const handleClickOutside = () => {\r\n    if (isEditing) {\r\n      setIsEditing(false)\r\n    }\r\n  }\r\n\r\n  useOnClickOutside(widthWrapper, handleClickOutside)\r\n\r\n  const handleUpload = () => {\r\n    fileInput?.current?.click()\r\n  }\r\n\r\n  const handleChangeImage = () => {\r\n    if (fileInput?.current?.files) {\r\n      const files = fileInput.current.files\r\n\r\n      if (files.length > 0 && typeof onChangeImage === 'function') {\r\n        const reader = new FileReader()\r\n\r\n        reader.addEventListener('load', () => {\r\n          if (typeof reader.result === 'string') {\r\n            onChangeImage(reader.result)\r\n          }\r\n        })\r\n\r\n        reader.readAsDataURL(files[0])\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleChangeWidth = (value: number) => {\r\n    if (typeof onChangeWidth === 'function') {\r\n      onChangeWidth(value)\r\n    }\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(!isEditing)\r\n  }\r\n\r\n  const clearImage = () => {\r\n    if (typeof onChangeImage === 'function') {\r\n      onChangeImage('')\r\n    }\r\n  }\r\n\r\n  if (pdfMode) {\r\n    if (value) {\r\n      return (\r\n        <Image\r\n          style={{...compose(`image ${className ? className : ''}`), maxWidth: width}}\r\n          src={value}\r\n        />\r\n      )\r\n    } else {\r\n      return <></>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`image ${value ? 'mb-5' : ''} ${className ? className : ''}`}>\r\n      {!value ? (\r\n        <button\r\n          type=\"button\"\r\n          className=\"image__upload\"\r\n          onClick={handleUpload}\r\n        >\r\n          {placeholder}\r\n        </button>\r\n      ) : (\r\n        <>\r\n          <img\r\n            src={value}\r\n            className=\"image__img\"\r\n            alt={placeholder}\r\n            style={{ maxWidth: width || 100}}\r\n          />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"image__change\"\r\n            onClick={handleUpload}\r\n          >\r\n            Change Image\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"image__edit\"\r\n            onClick={handleEdit}\r\n          >\r\n            Resize Image\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"image__remove\"\r\n            onClick={clearImage}\r\n          >\r\n            Remove\r\n          </button>\r\n\r\n          {isEditing && (\r\n            <div ref={widthWrapper} className=\"image__width-wrapper\">\r\n              <Slider min={100} max={250} marks={marks} included={false} step={1} onChange={handleChangeWidth} defaultValue={width || 100} />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <input\r\n        ref={fileInput}\r\n        tabIndex={-1}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        className=\"image__file\"\r\n        onChange={handleChangeImage}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditableFileImage\r\n","const countryList = [\r\n  { value: 'Tunisie', text: 'Tunisie' }\r\n]\r\n\r\nexport default countryList\r\n","import React, { FC } from 'react'\r\nimport { Document as PdfDocument } from '@react-pdf/renderer'\r\n\r\ninterface Props {\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst Document: FC<Props> = ({ pdfMode, children }) => {\r\n  return <>{pdfMode ? <PdfDocument>{children}</PdfDocument> : <>{children}</>}</>\r\n}\r\n\r\nexport default Document\r\n","import React, { FC } from 'react'\r\nimport { Page as PdfPage } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst Page: FC<Props> = ({ className, pdfMode, children }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <PdfPage size=\"A4\" style={compose('page ' + (className ? className : ''))}>\r\n          {children}\r\n        </PdfPage>\r\n      ) : (\r\n        <div className={'page ' + (className ? className : '')}>{children}</div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React, { FC } from 'react'\r\nimport { View as PdfView } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst View: FC<Props> = ({ className, pdfMode, children }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <PdfView style={compose('view ' + (className ? className : ''))}>{children}</PdfView>\r\n      ) : (\r\n        <div className={'view ' + (className ? className : '')}>{children}</div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default View\r\n","import React, { FC } from 'react'\r\nimport { Text as PdfText } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  pdfMode?: boolean\r\n  children?: string\r\n}\r\n\r\nconst Text: FC<Props> = ({ className, pdfMode, children }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <PdfText style={compose('span ' + (className ? className : ''))}>{children}</PdfText>\r\n      ) : (\r\n        <span className={'span ' + (className ? className : '')}>{children}</span>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Text\r\n","import React, { FC, useEffect, useState } from 'react'\r\nimport { PDFDownloadLink } from '@react-pdf/renderer'\r\nimport { Invoice } from '../data/types'\r\nimport InvoicePage from './InvoicePage'\r\n\r\ninterface Props {\r\n  data: Invoice\r\n}\r\n\r\nconst Download: FC<Props> = ({ data }) => {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    setShow(false)\r\n\r\n    const timeout = setTimeout(() => {\r\n      setShow(true)\r\n    }, 500)\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [data])\r\n\r\n  return (\r\n    <div className={'download-pdf ' + (!show ? 'loading' : '')} title=\"Save PDF\">\r\n      {show && (\r\n        <PDFDownloadLink\r\n          document={<InvoicePage pdfMode={true} data={data} />}\r\n          fileName={`${data.invoiceTitle ? data.invoiceTitle.toLowerCase() : 'invoice'}.pdf`}\r\n          aria-label=\"Save PDF\"\r\n        ></PDFDownloadLink>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Download\r\n","import React, { FC, useState, useEffect } from 'react'\r\nimport { Invoice, ProductLine } from '../data/types'\r\nimport { initialInvoice, initialProductLine } from '../data/initialData'\r\nimport EditableInput from './EditableInput'\r\nimport EditableSelect from './EditableSelect'\r\nimport EditableTextarea from './EditableTextarea'\r\nimport EditableCalendarInput from './EditableCalendarInput'\r\nimport EditableFileImage from './EditableFileImage'\r\nimport countryList from '../data/countryList'\r\nimport Document from './Document'\r\nimport Page from './Page'\r\nimport View from './View'\r\nimport Text from './Text'\r\nimport { Font } from '@react-pdf/renderer'\r\nimport Download from './DownloadPDF'\r\nimport format from 'date-fns/format'\r\n\r\nFont.register({\r\n  family: 'Nunito',\r\n  fonts: [\r\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf' },\r\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf', fontWeight: 600 },\r\n  ],\r\n})\r\n\r\ninterface Props {\r\n  data?: Invoice\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst InvoicePage: FC<Props> = ({ data, pdfMode }) => {\r\n  const [invoice, setInvoice] = useState<Invoice>(data ? { ...data } : { ...initialInvoice })\r\n  const [subTotal, setSubTotal] = useState<String>()\r\n  const [saleTax, setSaleTax] = useState<number>()\r\n\r\n  const dateFormat = 'MMM dd, yyyy'\r\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date()\r\n  const invoiceDueDate =\r\n    invoice.invoiceDueDate !== ''\r\n      ? new Date(invoice.invoiceDueDate)\r\n      : new Date(invoiceDate.valueOf())\r\n\r\n  if (invoice.invoiceDueDate === '') {\r\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 30)\r\n  }\r\n\r\n  const handleChange = (name: keyof Invoice, value: string | number) => {\r\n    if (name && name !== 'productLines') {\r\n      const newInvoice:any = { ...invoice, [name]:value }\r\n\r\n      if (name === 'logoWidth' && typeof value === 'number') {\r\n        newInvoice[name] = value\r\n      }\r\n      setInvoice(newInvoice)\r\n    }\r\n  }\r\n\r\n  const handleProductLineChange = (index: number, name: keyof ProductLine, value: string) => {\r\n    const productLines = invoice.productLines.map((productLine:ProductLine, i) => {\r\n      if (i === index) {\r\n        const newProductLine : ProductLine = { ...productLine, [name]:value }\r\n        //newProductLine[name] = value\r\n        /* if (name === 'description') {\r\n          \r\n        } else {\r\n          if (\r\n            value[value.length - 1] === '.' ||\r\n            (value[value.length - 1] === '0' && value.includes('.'))\r\n          ) {\r\n            newProductLine.ref = value\r\n          } else {\r\n            const n = parseFloat(value)\r\n\r\n            newProductLine.ref = (n ? n : 0).toString()\r\n          }\r\n        } */\r\n\r\n        return newProductLine\r\n      }\r\n\r\n      return { ...productLine }\r\n    })\r\n\r\n    setInvoice({ ...invoice, productLines })\r\n  }\r\n\r\n  const handleRemove = (i: number) => {\r\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i)\r\n\r\n    setInvoice({ ...invoice, productLines })\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    const productLines = [...invoice.productLines, { ...initialProductLine }]\r\n\r\n    setInvoice({ ...invoice, productLines })\r\n  }\r\n\r\n  const calculateAmount = (quantity: string, rate: string, remise:string, tva:string) => {\r\n    const quantityNumber = parseFloat(quantity) || 1\r\n    const rateNumber = parseFloat(rate)|| 0\r\n    const remiseNumber = parseFloat(remise)|| 0\r\n    const tvaNumber = parseFloat(tva)|| 0\r\n    let amount = 0\r\n    const remiseRatio = remiseNumber >0 ? (1-remiseNumber/100) : 1; \r\n    if (quantityNumber && rateNumber && tvaNumber ){\r\n      amount =  quantityNumber * rateNumber * (1+tvaNumber/100) * remiseRatio\r\n    }\r\n    return amount.toFixed(2)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    let subTotal = 0\r\n\r\n    invoice.productLines.forEach((productLine: ProductLine) => {\r\n      subTotal += parseFloat(calculateAmount(productLine.quantity,productLine.prix,productLine.remise,productLine.tva))\r\n    })\r\n    setSubTotal(subTotal.toFixed(2))\r\n  }, [invoice.productLines])\r\n\r\n  /* useEffect(() => {\r\n    const match = invoice.taxLabel.match(/(\\d+)%/)\r\n    const taxRate = match ? parseFloat(match[1]) : 0\r\n    const saleTax = subTotal ? (subTotal * taxRate) / 100 : 0\r\n\r\n    setSaleTax(saleTax)\r\n  }, [subTotal, invoice.taxLabel]) */\r\n\r\n  return (\r\n    <Document pdfMode={pdfMode}>\r\n      <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\r\n        {!pdfMode && <Download data={invoice} />}\r\n\r\n        <View className=\"flex\" pdfMode={pdfMode}>\r\n          <View className=\"w-50\" pdfMode={pdfMode}>\r\n            <EditableFileImage\r\n              className=\"logo\"\r\n              placeholder=\"Your Logo\"\r\n              value={invoice.logo}\r\n              width={invoice.logoWidth}\r\n              pdfMode={pdfMode}\r\n              onChangeImage={(value) => handleChange('logo', value)}\r\n              onChangeWidth={(value) => handleChange('logoWidth', value)}\r\n            />\r\n            <EditableInput\r\n              className=\"fs-20 bold\"\r\n              placeholder=\"Your Company\"\r\n              value={invoice.companyName}\r\n              onChange={(value) => handleChange('companyName', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Your Name\"\r\n              value={invoice.name}\r\n              onChange={(value) => handleChange('name', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Company's Address\"\r\n              value={invoice.companyAddress}\r\n              onChange={(value) => handleChange('companyAddress', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"City, State Zip\"\r\n              value={invoice.companyAddress2}\r\n              onChange={(value) => handleChange('companyAddress2', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableSelect\r\n              options={countryList}\r\n              value={invoice.companyCountry}\r\n              onChange={(value) => handleChange('companyCountry', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-50\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"fs-45 right bold\"\r\n              placeholder=\"Invoice\"\r\n              value={invoice.title}\r\n              onChange={(value) => handleChange('title', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View className=\"flex mt-40\" pdfMode={pdfMode}>\r\n          <View className=\"w-55\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"bold dark mb-5\"\r\n              value={invoice.billTo}\r\n              onChange={(value) => handleChange('billTo', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Your Client's Name\"\r\n              value={invoice.clientName}\r\n              onChange={(value) => handleChange('clientName', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Client's Address\"\r\n              value={invoice.clientAddress}\r\n              onChange={(value) => handleChange('clientAddress', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableSelect\r\n              options={countryList}\r\n              value={invoice.clientCountry}\r\n              onChange={(value) => handleChange('clientCountry', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-45\" pdfMode={pdfMode}>\r\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\r\n              <View className=\"w-40\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"bold\"\r\n                  value={invoice.invoiceTitleLabel}\r\n                  onChange={(value) => handleChange('invoiceTitleLabel', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-60\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  placeholder=\"INV-12\"\r\n                  value={invoice.invoiceTitle}\r\n                  onChange={(value) => handleChange('invoiceTitle', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n            </View>\r\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\r\n              <View className=\"w-40\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"bold\"\r\n                  value={invoice.invoiceDateLabel}\r\n                  onChange={(value) => handleChange('invoiceDateLabel', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-60\" pdfMode={pdfMode}>\r\n                <EditableCalendarInput\r\n                  value={format(invoiceDate, dateFormat)}\r\n                  selected={invoiceDate}\r\n                  onChange={(date) =>\r\n                    handleChange(\r\n                      'invoiceDate',\r\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\r\n                    )\r\n                  }\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View className=\"mt-30 bg-dark flex\" pdfMode={pdfMode}>\r\n        <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold\"\r\n              value={invoice.productLineRef}\r\n              onChange={(value) => handleChange('productLineRef', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-48 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold\"\r\n              value={invoice.productLineDescription}\r\n              onChange={(value) => handleChange('productLineDescription', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold right\"\r\n              value={invoice.productLineRemise}\r\n              onChange={(value) => handleChange('productLineRemise', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold right\"\r\n              value={invoice.productLineQuantity}\r\n              onChange={(value) => handleChange('productLineQuantity', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold right\"\r\n              value={invoice.productLineQuantityRate}\r\n              onChange={(value) => handleChange('productLineQuantityRate', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold right\"\r\n              value={invoice.productLineTva}\r\n              onChange={(value) => handleChange('productLineTva', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold right\"\r\n              value={invoice.productLineQuantityAmount}\r\n              onChange={(value) => handleChange('productLineQuantityAmount', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {invoice.productLines.map((productLine, i) => {\r\n          return pdfMode && productLine.description === '' ? (\r\n            <Text key={i}></Text>\r\n          ) : (\r\n            <View key={i} className=\"row flex\" pdfMode={pdfMode}>\r\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"dark right\"\r\n                  value={productLine.ref}\r\n                  onChange={(value) => handleProductLineChange(i, 'ref', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-48 p-4-8 pb-10\" pdfMode={pdfMode}>\r\n                <EditableTextarea\r\n                  className=\"dark\"\r\n                  rows={2}\r\n                  placeholder=\"Enter item name/description\"\r\n                  value={productLine.description}\r\n                  onChange={(value) => handleProductLineChange(i, 'description', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"dark right\"\r\n                  value={productLine.remise}\r\n                  onChange={(value) => handleProductLineChange(i, 'remise', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"dark right\"\r\n                  value={productLine.quantity}\r\n                  onChange={(value) => handleProductLineChange(i, 'quantity', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"dark right\"\r\n                  value={productLine.prix}\r\n                  onChange={(value) => handleProductLineChange(i, 'prix', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"dark right\"\r\n                  value={productLine.tva}\r\n                  onChange={(value) => handleProductLineChange(i, 'tva', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-18 p-4-8 pb-10\" pdfMode={pdfMode}>\r\n                <Text className=\"dark right\" pdfMode={pdfMode}>\r\n                  {calculateAmount(productLine.quantity, productLine.prix, productLine.remise, productLine.tva)}\r\n                </Text>\r\n              </View>\r\n              {!pdfMode && (\r\n                <button\r\n                  className=\"link row__remove\"\r\n                  aria-label=\"Remove Row\"\r\n                  title=\"Remove Row\"\r\n                  onClick={() => handleRemove(i)}\r\n                >\r\n                  <span className=\"icon icon-remove bg-red\"></span>\r\n                </button>\r\n              )}\r\n            </View>\r\n          )\r\n        })}\r\n\r\n        <View className=\"flex\" pdfMode={pdfMode}>\r\n          <View className=\"w-50 mt-10\" pdfMode={pdfMode}>\r\n            {!pdfMode && (\r\n              <button className=\"link\" onClick={handleAdd}>\r\n                <span className=\"icon icon-add bg-green mr-10\"></span>\r\n                Add Line Item\r\n              </button>\r\n            )}\r\n          </View>\r\n          <View className=\"w-50 mt-20\" pdfMode={pdfMode}>\r\n            <View className=\"flex\" pdfMode={pdfMode}>\r\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\r\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\r\n                  {saleTax?.toFixed(2)}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n            <View className=\"flex bg-gray p-5\" pdfMode={pdfMode}>\r\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"bold\"\r\n                  value={invoice.totalLabel}\r\n                  onChange={(value) => handleChange('totalLabel', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-50 p-5 flex\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"dark bold right ml-30\"\r\n                  value={invoice.currency}\r\n                  onChange={(value) => handleChange('currency', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n                <Text className=\"right bold dark w-auto\" pdfMode={pdfMode}>\r\n                  {subTotal ? subTotal.toString() : '0'}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View className=\"mt-20\" pdfMode={pdfMode}>\r\n          <EditableInput\r\n            className=\"bold w-100\"\r\n            value={invoice.notesLabel}\r\n            onChange={(value) => handleChange('notesLabel', value)}\r\n            pdfMode={pdfMode}\r\n          />\r\n          <EditableTextarea\r\n            className=\"w-100\"\r\n            rows={2}\r\n            value={invoice.notes}\r\n            onChange={(value) => handleChange('notes', value)}\r\n            pdfMode={pdfMode}\r\n          />\r\n        </View>\r\n        <View className=\"mt-20\" pdfMode={pdfMode}>\r\n          <EditableInput\r\n            className=\"bold w-100\"\r\n            value={invoice.termLabel}\r\n            onChange={(value) => handleChange('termLabel', value)}\r\n            pdfMode={pdfMode}\r\n          />\r\n          <EditableTextarea\r\n            className=\"w-100\"\r\n            rows={2}\r\n            value={invoice.term}\r\n            onChange={(value) => handleChange('term', value)}\r\n            pdfMode={pdfMode}\r\n          />\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  )\r\n}\r\n\r\nexport default InvoicePage\r\n","import React from 'react'\r\nimport InvoicePage from './components/InvoicePage'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <h1 className=\"center fs-30\">React Invoice Generator</h1>\r\n      <InvoicePage />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './scss/main.scss'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}